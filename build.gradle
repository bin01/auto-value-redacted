import org.gradle.internal.jvm.Jvm

group = GROUP
version = VERSION_NAME
def artifact = POM_ARTIFACT_ID

apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }
  mavenCentral()
}

dependencies {
  compile 'com.squareup:javapoet:1.1.0'
  compile 'com.google.auto.service:auto-service:1.0-rc2'
  compile 'com.google.auto.value:auto-value:1.2-SNAPSHOT'

  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.27'
  testCompile 'com.google.testing.compile:compile-testing:0.7'
  testCompile files(Jvm.current().getToolsJar())
}

def isReleaseBuild() {
  return version.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
          : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
  return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
          : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
  return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
  return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
}

publishing {
  publications {
    processor(MavenPublication) {
      groupId project.group
      artifactId artifact
      version project.version

      from components.java
    }
  }
  repositories {
    maven {
      url isReleaseBuild() ? getReleaseRepositoryUrl() : getSnapshotRepositoryUrl()
      credentials() {
        username getRepositoryUsername()
        password getRepositoryPassword()
      }
    }
  }
}
